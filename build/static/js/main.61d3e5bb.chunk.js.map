{"version":3,"sources":["services/api.js","user-contex.js","pages/Login/index.js","pages/Dashboard/index.js","pages/register/index.js","pages/Events/index.js","components/TopNav.js","pages/Myregistrations/index.js","routes.js","App.js","index.js","assets/camera.png"],"names":["api","axios","create","baseURL","UserContext","createContext","ContextWrapper","props","useState","localStorage","getItem","user","isLoggedIn","setIsloggedIn","Provider","value","children","Login","history","useContext","email","setEmail","password","setPassword","error","setError","errorMessage","setErrorMessage","handleSubmit","evt","a","preventDefault","post","response","user_id","data","setItem","push","message","setTimeout","Container","Form","onSubmit","FormGroup","className","Input","type","name","id","placeholder","onChange","target","Button","onClick","Alert","color","Dashboard","events","setEvents","rSelected","setRSelected","success","setSuccess","messageHandler","setMessageHandler","eventsRequest","setEventsRequest","dropdownOpen","setDropDownOpen","eventRequestMessage","setEventRequestMessage","eventRequestSuccess","setEventRequestSuccess","useEffect","getEvents","socket","useMemo","socketio","query","on","filterHandler","myEventsHandler","get","headers","filter","url","deleteEventHandler","eventId","delete","registrationRequestHandler","event","title","acceptEventHandler","removeNotificationFromDashboard","console","log","rejectEventHandler","newEvents","_id","map","request","key","style","ButtonGroup","Dropdown","isOpen","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","active","backgroundImage","thumbnail_url","size","moment","date","format","parseFloat","price","toFixed","description","activities","Register","firstName","setFirstName","lastName","setLastName","Events","setTitle","setDescription","setPrice","thumbnail","setThumbnail","setActivities","setDate","setOpen","preview","URL","createObjectURL","submitHandler","eventData","FormData","append","Promise","reject","activitiesEventHandler","Label","files","src","cameraIcon","alt","maxWidth","ButtonDropdown","disabled","TopNav","collapsed","setCollapsed","Navbar","light","NavbarToggler","to","removeItem","Collapse","navbar","Nav","NavItem","MyRegistrations","myEvents","setMyEvents","getMyEvents","isApproved","approved","eventTitle","eventDate","eventPrice","userEmail","undefined","Routes","exact","path","component","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.61d3e5bb.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n\tbaseURL: 'http://localhost:8000'\r\n});\r\n\r\nexport default api;\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst ContextWrapper = (props) => {\r\n\tconst defaultValueHandler = () => {\r\n\t\tconst user = localStorage.getItem('user');\r\n\t\tif (user) return true;\r\n\t\treturn false;\r\n\t};\r\n\r\n\tconst [isLoggedIn, setIsloggedIn] = useState(defaultValueHandler());\r\n\tconst user = {\r\n\t\tisLoggedIn,\r\n\t\tsetIsloggedIn\r\n\t};\r\n\r\n\treturn <UserContext.Provider value={user}>{props.children}</UserContext.Provider>;\r\n};\r\n\r\nexport default ContextWrapper;\r\n","import React, { useState, useContext } from 'react';\r\nimport api from '../../services/api';\r\nimport { Container, Button, Form, FormGroup, Input, Alert } from 'reactstrap';\r\nimport { UserContext } from '../../user-contex';\r\n\r\nexport default function Login({ history }) {\r\n\tconst { setIsloggedIn } = useContext(UserContext);\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [error, setError] = useState(false);\r\n\tconst [errorMessage, setErrorMessage] = useState('false');\r\n\r\n\tconst handleSubmit = async (evt) => {\r\n\t\tevt.preventDefault();\r\n\t\tconst response = await api.post('/login', { email, password });\r\n\t\tconst user_id = response.data.user_id || false;\r\n\t\tconst user = response.data.user || false;\r\n\r\n\t\ttry {\r\n\t\t\tif (user && user_id) {\r\n\t\t\t\tlocalStorage.setItem('user', user);\r\n\t\t\t\tlocalStorage.setItem('user_id', user_id);\r\n\t\t\t\tsetIsloggedIn(true);\r\n\t\t\t\thistory.push('/');\r\n\t\t\t} else {\r\n\t\t\t\tconst { message } = response.data;\r\n\t\t\t\tsetError(true);\r\n\t\t\t\tsetErrorMessage(message);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetError(false);\r\n\t\t\t\t\tsetErrorMessage('');\r\n\t\t\t\t}, 2000);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tsetError(true);\r\n\t\t\tsetErrorMessage('Error, the server returned an error');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<h2>Login:</h2>\r\n\t\t\t<p>\r\n\t\t\t\tPlease <strong>Login</strong> into your account\r\n\t\t\t</p>\r\n\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t<FormGroup className='mb-2 mr-sm-2 '>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\tid='email'\r\n\t\t\t\t\t\tplaceholder='Your email'\r\n\t\t\t\t\t\tonChange={(evt) => setEmail(evt.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup className='mb-2 mr-sm-2 '>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\tid='password'\r\n\t\t\t\t\t\tplaceholder='Your password'\r\n\t\t\t\t\t\tonChange={(evt) => setPassword(evt.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Button className='submit-btn'>Submit</Button>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Button className='Secondary-btn' onClick={() => history.push('/register')}>\r\n\t\t\t\t\t\tNew Account\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t</Form>\r\n\r\n\t\t\t{error ? (\r\n\t\t\t\t<Alert className='event-validation' color='danger'>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\t{errorMessage}\r\n\t\t\t\t</Alert>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n}\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\nimport api from '../../services/api';\r\nimport moment from 'moment';\r\nimport { Button, ButtonGroup, Alert, Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap';\r\nimport './dashboard.css';\r\n\r\nimport socketio from 'socket.io-client';\r\n\r\n//Dashboard will show all the events\r\nexport default function Dashboard({ history }) {\r\n\tconst [events, setEvents] = useState([])\r\n\tconst user = localStorage.getItem('user')\r\n\tconst user_id = localStorage.getItem('user_id')\r\n\r\n\tconst [rSelected, setRSelected] = useState(null)\r\n\tconst [error, setError] = useState(false);\r\n\tconst [success, setSuccess] = useState(false)\r\n\tconst [messageHandler, setMessageHandler] = useState('')\r\n\tconst [eventsRequest, setEventsRequest] = useState([])\r\n\tconst [dropdownOpen, setDropDownOpen] = useState(false)\r\n\tconst [eventRequestMessage, setEventRequestMessage] = useState('')\r\n\tconst [eventRequestSuccess, setEventRequestSuccess] = useState(false)\r\n\r\n\tconst toggle = () => setDropDownOpen(!dropdownOpen);\r\n\r\n\tuseEffect(() => {\r\n\t\t\tgetEvents()\r\n\t}, [])\r\n\r\n\tconst socket = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\t\tsocketio('http://localhost:8000/', { query: { user: user_id } }),\r\n\t\t\t[user_id]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\t\tsocket.on('registration_request', data => setEventsRequest([...eventsRequest, data]));\r\n\t}, [eventsRequest, socket])\r\n\r\n\tconst filterHandler = (query) => {\r\n\t\t\tsetRSelected(query)\r\n\t\t\tgetEvents(query)\r\n\t}\r\n\r\n\tconst myEventsHandler = async () => {\r\n\t\t\ttry {\r\n\t\t\t\t\tsetRSelected('myevents')\r\n\t\t\t\t\tconst response = await api.get('/user/events', { headers: { user } })\r\n\t\t\t\t\tsetEvents(response.data.events)\r\n\t\t\t} catch (error) {\r\n\t\t\t\t\thistory.push('/login');\r\n\t\t\t}\r\n\r\n\t}\r\n\r\n\tconst getEvents = async (filter) => {\r\n\t\t\ttry {\r\n\t\t\t\t\tconst url = filter ? `/dashboard/${filter}` : '/dashboard';\r\n\t\t\t\t\tconst response = await api.get(url, { headers: { user } })\r\n\r\n\t\t\t\t\tsetEvents(response.data.events)\r\n\t\t\t} catch (error) {\r\n\t\t\t\t\thistory.push('/login');\r\n\t\t\t}\r\n\r\n\t};\r\n\r\n\tconst deleteEventHandler = async (eventId) => {\r\n\t\t\ttry {\r\n\t\t\t\t\tawait api.delete(`/event/${eventId}`, { headers: { user: user } });\r\n\t\t\t\t\tsetSuccess(true)\r\n\t\t\t\t\tsetMessageHandler('The event was deleted successfully!')\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tsetSuccess(false)\r\n\t\t\t\t\t\t\tfilterHandler(null)\r\n\t\t\t\t\t\t\tsetMessageHandler('')\r\n\t\t\t\t\t}, 2500)\r\n\r\n\t\t\t} catch (error) {\r\n\t\t\t\t\tsetError(true)\r\n\t\t\t\t\tsetMessageHandler('Error when deleting event!')\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tsetError(false)\r\n\t\t\t\t\t\t\tsetMessageHandler('')\r\n\t\t\t\t\t}, 2000)\r\n\t\t\t}\r\n\t}\r\n\r\n\tconst registrationRequestHandler = async (event) => {\r\n\t\t\ttry {\r\n\t\t\t\t\tawait api.post(`/registration/${event.id}`, {}, { headers: { user } })\r\n\t\t\t\t\tsetSuccess(true)\r\n\t\t\t\t\tsetMessageHandler(`The request for the event ${event.title} was successfully!`)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tsetSuccess(false)\r\n\t\t\t\t\t\t\tfilterHandler(null)\r\n\t\t\t\t\t\t\tsetMessageHandler('')\r\n\t\t\t\t\t}, 2500)\r\n\r\n\t\t\t} catch (error) {\r\n\t\t\t\t\tsetError(true)\r\n\t\t\t\t\tsetMessageHandler(`The request for the event ${event.title} wasn't successfully!`)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tsetError(false)\r\n\t\t\t\t\t\t\tsetMessageHandler('')\r\n\t\t\t\t\t}, 2000)\r\n\t\t\t}\r\n\t}\r\n\r\n\tconst acceptEventHandler = async (eventId) => {\r\n\t\t\ttry {\r\n\t\t\t\t\tawait api.post(`/registration/${eventId}/approvals`, {}, { headers: { user } })\r\n\t\t\t\t\tsetEventRequestSuccess(true)\r\n\t\t\t\t\tsetEventRequestMessage('Event approved successfully!')\r\n\t\t\t\t\tremoveNotificationFromDashboard(eventId)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tsetEventRequestSuccess(false)\r\n\t\t\t\t\t\t\tsetEventRequestMessage('')\r\n\t\t\t\t\t}, 2000)\r\n\r\n\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.log(err)\r\n\t\t\t}\r\n\t}\r\n\r\n\tconst rejectEventHandler = async (eventId) => {\r\n\t\t\ttry {\r\n\t\t\t\t\tawait api.post(`/registration/${eventId}/rejections`, {}, { headers: { user } })\r\n\t\t\t\t\tsetEventRequestSuccess(true)\r\n\t\t\t\t\tsetEventRequestMessage('Event rejected successfully!')\r\n\t\t\t\t\tremoveNotificationFromDashboard(eventId)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tsetEventRequestSuccess(false)\r\n\t\t\t\t\t\t\tsetEventRequestMessage('')\r\n\t\t\t\t\t}, 2000)\r\n\r\n\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.log(err)\r\n\t\t\t}\r\n\t}\r\n\r\n\tconst removeNotificationFromDashboard = (eventId) => {\r\n\t\t\tconst newEvents = eventsRequest.filter((event) => event._id !== eventId)\r\n\t\t\tsetEventsRequest(newEvents)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ul className='notification'>\r\n\t\t\t\t{eventsRequest.map((request) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={request.id}>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<strong style={{ color: 'blue' }}>{request.user.email}</strong> Is requesting to\r\n\t\t\t\t\t\t\t\tregister to your Event\r\n\t\t\t\t\t\t\t\t<strong style={{ color: 'purple' }}> {request.event.title}</strong>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t\t<Button color=\"secondary\" onClick={() => acceptEventHandler(request._id)}>Accept</Button>\r\n\t\t\t\t\t\t\t<Button color=\"danger\" onClick={() => rejectEventHandler(request._id)}>Reject</Button>\r\n\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t\t{eventRequestSuccess ? <Alert color=\"success\"> {eventRequestMessage}</Alert> : \"\"}\r\n\t\t\t<div className='filter-panel'>\r\n\t\t\t\t<Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n\t\t\t\t\t<DropdownToggle color='success' caret>\r\n\t\t\t\t\t\tFilter\r\n\t\t\t\t\t</DropdownToggle>\r\n\t\t\t\t\t<DropdownMenu>\r\n\t\t\t\t\t\t<DropdownItem color='primary' onClick={() => filterHandler(null)} active={rSelected === null}>\r\n\t\t\t\t\t\t\tAll Activities\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem color='primary' onClick={myEventsHandler} active={rSelected === 'myevents'}>\r\n\t\t\t\t\t\t\tMy Events\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\tonClick={() => filterHandler('online_training')}\r\n\t\t\t\t\t\t\tactive={rSelected === 'online_training'}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tOnline training\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\tonClick={() => filterHandler('programming')}\r\n\t\t\t\t\t\t\tactive={rSelected === 'programming'}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tProgramming\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\tonClick={() => filterHandler('others')}\r\n\t\t\t\t\t\t\tactive={rSelected === 'others'}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tOther Events\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t</DropdownMenu>\r\n\t\t\t\t</Dropdown>\r\n\t\t\t</div>\r\n\t\t\t<ul className='events-list'>\r\n\t\t\t\t{events.map((event) => (\r\n\t\t\t\t\t<li key={event._id}>\r\n\t\t\t\t\t\t<header style={{ backgroundImage: `url(${event.thumbnail_url})` }}>\r\n\t\t\t\t\t\t\t{event.user === user_id ? (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Button color='danger' size='sm' onClick={() => deleteEventHandler(event._id)}>\r\n\t\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</header>\r\n\t\t\t\t\t\t<strong>{event.title}</strong>\r\n\t\t\t\t\t\t<span>Event Date: {moment(event.date).format('l')}</span>\r\n\t\t\t\t\t\t<span>Event Price: ₦ {parseFloat(event.price).toFixed(2)}</span>\r\n\t\t\t\t\t\t<span>Event Description: {event.description}</span>\r\n\t\t\t\t\t\t<span>Event Type: {event.activities}</span>\r\n\t\t\t\t\t\t<Button color='primary' onClick={() => registrationRequestHandler(event)}>\r\n\t\t\t\t\t\t\tRegistration Request\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t\t{error ? (\r\n\t\t\t\t<Alert className='event-validation' color='danger'>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\t{messageHandler}{' '}\r\n\t\t\t\t</Alert>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)}\r\n\t\t\t{success ? (\r\n\t\t\t\t<Alert className='event-validation' color='success'>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\t{messageHandler}\r\n\t\t\t\t</Alert>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport api from '../../services/api';\r\nimport { Container, Button, Form, FormGroup, Input, Alert } from 'reactstrap';\r\nimport { UserContext } from '../../user-contex';\r\n\r\nexport default function Register({ history }) {\r\n\tconst { setIsloggedIn } = useContext(UserContext);\r\n\tconst [email, setEmail] = useState(\"\")\r\n\tconst [password, setPassword] = useState(\"\")\r\n\tconst [firstName, setFirstName] = useState(\"\")\r\n\tconst [lastName, setLastName] = useState(\"\")\r\n\r\n\tconst [error, setError] = useState(false);\r\n\tconst [errorMessage, setErrorMessage] = useState(\"\")\r\n\r\n\r\n\tconst handleSubmit = async evt => {\r\n\t\t\tevt.preventDefault();\r\n\r\n\t\t\tif (email !== \"\" && password !== \"\" && firstName !== \"\" && lastName !== \"\") {\r\n\t\t\t\t\tconst response = await api.post('/user/register', { email, password, firstName, lastName })\r\n\t\t\t\t\tconst user = response.data.user || false;\r\n\t\t\t\t\tconst user_id = response.data.user_id || false;\r\n\r\n\t\t\t\t\tif (user && user_id) {\r\n\t\t\t\t\t\t\tlocalStorage.setItem('user', user)\r\n\t\t\t\t\t\t\tlocalStorage.setItem('user_id', user_id)\r\n\t\t\t\t\t\t\tsetIsloggedIn(true)\r\n\r\n\t\t\t\t\t\t\thistory.push('/')\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst { message } = response.data\r\n\t\t\t\t\t\t\tsetError(true)\r\n\t\t\t\t\t\t\tsetErrorMessage(message)\r\n\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\tsetError(false)\r\n\t\t\t\t\t\t\t\t\tsetErrorMessage(\"\")\r\n\t\t\t\t\t\t\t}, 2000)\r\n\t\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t\tsetError(true)\r\n\t\t\t\t\tsetErrorMessage(\"You need to fill all the Inputs\")\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tsetError(false)\r\n\t\t\t\t\t\t\tsetErrorMessage(\"\")\r\n\t\t\t\t\t}, 2000)\r\n\r\n\t\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<h2>Register:</h2>\r\n\t\t\t<p>\r\n\t\t\t\tPlease <strong>Register</strong> for a new account\r\n\t\t\t</p>\r\n\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t<FormGroup className='mb-2 mr-sm-2'>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\tid='firstName'\r\n\t\t\t\t\t\tplaceholder='Your firstName'\r\n\t\t\t\t\t\tonChange={(evt) => setFirstName(evt.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup className='mb-2 mr-sm-2'>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\tid='lastName'\r\n\t\t\t\t\t\tplaceholder='Your Last Name'\r\n\t\t\t\t\t\tonChange={(evt) => setLastName(evt.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup className='mb-2 mr-sm-2'>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\tid='email'\r\n\t\t\t\t\t\tplaceholder='Your email'\r\n\t\t\t\t\t\tonChange={(evt) => setEmail(evt.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup className='mb-2 mr-sm-2'>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\tid='password'\r\n\t\t\t\t\t\tplaceholder='Your password'\r\n\t\t\t\t\t\tonChange={(evt) => setPassword(evt.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Button className='submit-btn'>Submit</Button>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Button className='Secondary-btn' onClick={() => history.push('/login')}>\r\n\t\t\t\t\t\tLogin Instead?\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t</Form>\r\n\t\t\t{error ? (\r\n\t\t\t\t<Alert className='event-validation' color='danger'>\r\n\t\t\t\t\t{errorMessage}\r\n\t\t\t\t</Alert>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n}\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport api from '../../services/api';\r\nimport { Container, Button, Form, Label, FormGroup, Input, Alert, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport cameraIcon from '../../assets/camera.png';\r\nimport './event.css';\r\n\r\n// Events page will show all the events\r\n\r\nexport default function Events({ history }) {\r\n\tconst [title, setTitle] = useState('');\r\n\tconst [description, setDescription] = useState('');\r\n\tconst [price, setPrice] = useState('');\r\n\tconst [thumbnail, setThumbnail] = useState(null);\r\n\tconst [activities, setActivities] = useState('Activities');\r\n\tconst [date, setDate] = useState('');\r\n\tconst [errorMessage, setErrorMessage] = useState(false);\r\n\tconst [success, setSuccess] = useState(false);\r\n\r\n\tconst [dropdownOpen, setOpen] = useState(false);\r\n\tconst user = localStorage.getItem('user');\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!user){\r\n\t\t\thistory.push('./login');\r\n\t\t}\r\n\t},[])\r\n\r\n  const toggle = () => setOpen(!dropdownOpen);\r\n\r\n\tconst preview = useMemo(() => {\r\n\t\treturn thumbnail ? URL.createObjectURL(thumbnail) : null;\r\n\t}, [thumbnail]);\r\n\r\n\tconsole.log(title, description, price, thumbnail, activities, date);\r\n\r\n\tconst submitHandler = async (evt) => {\r\n\t\tevt.preventDefault();\r\n\t\tconst eventData = new FormData();\r\n\r\n\t\teventData.append('thumbnail', thumbnail);\r\n\t\teventData.append('title', title);\r\n\t\teventData.append('description', description);\r\n\t\teventData.append('price', price);\r\n\t\teventData.append('activities', activities);\r\n\t\teventData.append('date', date);\r\n\r\n\t\ttry {\r\n\t\t\tif (\r\n\t\t\t\ttitle !== '' &&\r\n\t\t\t\tdescription !== '' &&\r\n\t\t\t\tprice !== '' &&\r\n\t\t\t\tactivities !== 'activities' &&\r\n\t\t\t\tdate !== '' &&\r\n\t\t\t\tthumbnail !== null\r\n\t\t\t) {\r\n\t\t\t\tawait api.post('/event', eventData, { headers: { user } });\r\n\t\t\t\tsetSuccess(true);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetSuccess(false);\r\n\t\t\t\t\thistory.push(\"/\");\r\n\t\t\t\t}, 2000);\r\n\t\t\t} else {\r\n\t\t\t\tsetErrorMessage(true);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetErrorMessage(false);\r\n\t\t\t\t}, 2000);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tPromise.reject(error);\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\tconst activitiesEventHandler = (activities) => setActivities(activities);\r\n  console.log(activities)\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Label>Upload Image: </Label>\r\n\t\t\t\t\t<Label\r\n\t\t\t\t\t\tid='thumbnail'\r\n\t\t\t\t\t\tstyle={{ backgroundImage: `url(${preview})` }}\r\n\t\t\t\t\t\tclassName={thumbnail ? 'has-thumbnail' : ''}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Input type='file' onChange={(evt) => setThumbnail(evt.target.files[0])} />\r\n\t\t\t\t\t\t<img src={cameraIcon} alt='camera' style={{ maxWidth: '50px' }} />\r\n\t\t\t\t\t</Label>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Label>Title: </Label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid='title'\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\tplaceholder={'Event title here'}\r\n\t\t\t\t\t\tonChange={(evt) => setTitle(evt.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Label>Event description: </Label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid='description'\r\n\t\t\t\t\t\ttype='textarea'\r\n\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\tplaceholder={'Event description here'}\r\n\t\t\t\t\t\tonChange={(evt) => setDescription(evt.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Label>Event price: </Label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid='price'\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={price}\r\n\t\t\t\t\t\tplaceholder={'Event price here e.g ₦0.00'}\r\n\t\t\t\t\t\tonChange={(evt) => setPrice(evt.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Label>Event Date</Label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='date'\r\n\t\t\t\t\t\tid='date'\r\n\t\t\t\t\t\tvalue={date}\r\n\t\t\t\t\t\tonChange={(evt) => setDate(evt.target.value)}\r\n\t\t\t\t\t\tplaceholder='Event date'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t\r\n\t\t\t\t<FormGroup >\r\n\t\t\t\t\t<ButtonDropdown isOpen={dropdownOpen} className=\"Secondary-btn\"  toggle={toggle}>\r\n\t\t\t\t\t\t<Button   id='caret' color='primary' value={activities} disabled>\r\n\t\t\t\t\t\t\t{activities}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<DropdownToggle caret color='primary' />\r\n\t\t\t\t\t\t<DropdownMenu>\r\n\t\t\t\t\t\t\t<DropdownItem onClick={() => activitiesEventHandler('online_training')}>Online training</DropdownItem>\r\n\t\t\t\t\t\t\t<DropdownItem onClick={() => activitiesEventHandler('programming')}>Programming</DropdownItem>\r\n\t\t\t\t\t\t\t<DropdownItem onClick={() => activitiesEventHandler('training')}>Training</DropdownItem>\r\n\t\t\t\t\t\t\t<DropdownItem onClick={() => activitiesEventHandler('others')}>Others</DropdownItem>\r\n\t\t\t\t\t\t</DropdownMenu>\r\n\t\t\t\t\t</ButtonDropdown>\r\n\t\t\t\t\t\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Button type='submit' className='submit-btn'>\r\n\t\t\t\t\t\tCreate Event\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Button type='secondary-btn' className='Secondary-btn' onClick={() => history.push('/')}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t</Form>\r\n\t\t\t{errorMessage ? (\r\n\t\t\t\t<Alert className='event-validation' color='danger'>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\tMissing required information\r\n\t\t\t\t</Alert>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)}\r\n\t\t\t{success ? (\r\n\t\t\t\t<Alert className='event-validation' color='success'>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\tthe event was created successfully\r\n\t\t\t\t</Alert>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { Collapse, Navbar, NavbarToggler, Nav, NavItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../user-contex';\r\n\r\nconst TopNav = () => {\r\n\tconst { isLoggedIn, setIsloggedIn } = useContext(UserContext);\r\n\r\n\tconst [collapsed, setCollapsed] = useState(true);\r\n\tconst toggleNavbar = () => setCollapsed(!collapsed);\r\n\r\n\tconst logoutHandler = () => {\r\n\t\tlocalStorage.removeItem('user');\r\n\t\tlocalStorage.removeItem('user_id');\r\n\t\tsetIsloggedIn(false);\r\n\t};\r\n\r\n\treturn isLoggedIn ? (\r\n\t\t<div>\r\n\t\t\t<Navbar color='faded' light>\r\n\t\t\t\t<NavbarToggler onClick={toggleNavbar} />\r\n\t\t\t\t<Link to='/login' onClick={logoutHandler}>\r\n\t\t\t\t\tLogout\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Collapse isOpen={!collapsed} navbar>\r\n\t\t\t\t\t<Nav navbar>\r\n\t\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t\t<Link to='/events'>Events</Link>\r\n\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t\t<Link to='/'>Dashboard</Link>\r\n\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t\t<Link to='/notifications'>Notifications</Link>\r\n\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t</Collapse>\r\n\t\t\t</Navbar>\r\n\t\t</div>\r\n\t) : (\r\n\t\t''\r\n\t);\r\n};\r\n\r\nexport default TopNav;\r\n","import React, { useState, useEffect } from 'react'\r\nimport moment from 'moment';\r\nimport api from '../../services/api'\r\nimport { Button, ButtonGroup } from 'reactstrap';\r\nimport './style.css'\r\n\r\n\r\nexport default function MyRegistrations() {\r\n    const [myEvents, setMyEvents] = useState([])\r\n    const user = localStorage.getItem('user')\r\n\r\n    useEffect(() => {\r\n        getMyEvents()\r\n    }, [])\r\n\r\n    const getMyEvents = async () => {\r\n        try {\r\n            const response = await api.get('/registration', { headers: { user } })\r\n            setMyEvents(response.data)\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const isApproved = (approved) => approved === true ? \"Approved\" : \"Rejected\"\r\n\r\n    const acceptEventHandler = async (eventId) => {\r\n        try {\r\n            await api.post(`/registration/${eventId}/approvals`, {}, { headers: { user } })\r\n            getMyEvents()\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const rejectEventHandler = async (eventId) => {\r\n        try {\r\n            await api.post(`/registration/${eventId}/rejections`, {}, { headers: { user } })\r\n            getMyEvents()\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ul className=\"events\">\r\n            {myEvents.map(event => (\r\n                <li key={event._id}>\r\n                    <div><strong>{event.eventTitle}</strong></div>\r\n                    <div className=\"events-details\">\r\n                        <span>Event Date: {moment(event.eventDate).format('l')}</span>\r\n                        <span>Event Price: ₦ {parseFloat(event.eventPrice).toFixed(2)}</span>\r\n                        <span>User Email: {event.userEmail}</span>\r\n                        <span> Status:\r\n                            <span className={event.approved !== undefined ? isApproved(event.approved) : \"Pending\"}>{event.approved !== undefined ? isApproved(event.approved) : \"Pending\"}</span>\r\n                        </span>\r\n                    </div>\r\n                    <ButtonGroup>\r\n                        <Button disabled={event.approved === true || event.approved === false ? true : false} color=\"success\" onClick={() => acceptEventHandler(event._id)}>Accept</Button>\r\n                        <Button disabled={event.approved === true || event.approved === false ? true : false} color=\"danger\" onClick={() => rejectEventHandler(event._id)}>Reject</Button>\r\n                    </ButtonGroup>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Login from './pages/Login';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Register from './pages/register';\r\nimport Events from './pages/Events';\r\nimport TopNav from './components/TopNav';\r\n\r\nimport MyRegistrations from './pages/Myregistrations';\r\n\r\nexport default function Routes() {\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<TopNav />\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path='/' component={Dashboard} />\r\n\t\t\t\t<Route exact path='/notifications' component={MyRegistrations}/>\r\n\t\t\t\t<Route exact path='/login' component={Login} />\r\n\t\t\t\t<Route exact path='/register' component={Register} />\r\n\t\t\t\t<Route path='/events' component={Events} />\r\n\t\t\t</Switch>\r\n\t\t</BrowserRouter>\r\n\t);\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Routes from './routes';\nimport ContextWrapper from './user-contex';\n\nimport { Container } from 'reactstrap';\n\nfunction App() {\n\treturn (\n\t\t<ContextWrapper>\n\t\t\t<Container>\n\t\t\t\t<h1>Event app</h1>\n\t\t\t\t<div className='content'>\n\t\t\t\t\t<Routes />\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</ContextWrapper>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n","module.exports = __webpack_public_path__ + \"static/media/camera.91a960a0.png\";"],"sourceRoot":""}